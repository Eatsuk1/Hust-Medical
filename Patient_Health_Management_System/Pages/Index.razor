@page "/"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using RestSharp
@inject ProtectedLocalStorage ProtectedLocalStorage

@code{

    private Auth0Token? auth0Token {get; set;}

    protected override async Task OnInitializedAsync()
    {
        var value = await ProtectedLocalStorage.GetAsync<string>("access_token");
        if (String.IsNullOrEmpty(value.Value))
        {
            await TokenGenerator();
            await ProtectedLocalStorage.SetAsync("access_token", auth0Token.access_token);
        }   
    }

    private async Task TokenGenerator()
    {
        string directory = Directory.GetCurrentDirectory();
        IConfigurationRoot configurationRoot = new ConfigurationBuilder()
        .SetBasePath(directory)
        .AddJsonFile("appsettings.json")
        .Build();
        var domain = configurationRoot.GetSection("Auth0").GetSection("Domain").Value;
        var client_id = configurationRoot.GetSection("Auth0").GetSection("ClientId").Value;
        var client_secret = configurationRoot.GetSection("Auth0").GetSection("ClientSecret").Value;

        var client = new RestClient($"https://{domain}/oauth/token");
        var request = new RestRequest();
        request.AddHeader("content-type", "application/json");
        request.AddJsonBody($"{{\"client_id\":\"{client_id}\",\"client_secret\":\"{client_secret}\",\"audience\":\"https://{domain}/api/v2/\",\"grant_type\":\"client_credentials\"}}");
        auth0Token = await client.PostAsync<Auth0Token>(request);
    }
}

