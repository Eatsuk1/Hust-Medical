@page "/account"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject IUserService UserService
@inject IDialogService DialogService
@layout MainLayout



<div style="height:30rem; background-color:#FAFAFA; border-radius:20px; width:96.7%">
            <div style="padding-top:1rem; margin:0px 20px; width:96.7%">
    <MudText Typo="Typo.h6" Style="padding-bottom:10px">Quản lí tài khoản</MudText>
    <MudTextField Label="Họ và Tên" Value="@user.Name" ReadOnly="true"></MudTextField>
    <MudTextField Label="Email" Value="@user.Email" ReadOnly="true"></MudTextField>
    <MudTextField Label="Số điện thoại" Value="@user.PhoneNumber" ReadOnly="true"></MudTextField>
    <MudTextField Label="Địa chỉ" Value="@user.Address" ReadOnly="true"></MudTextField>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="() => ShowUpdate(user)">Chỉnh sửa</MudButton>  
</div>
</div>

@code{
    private string userId = new string("");

    private User user = new User();

    protected override async Task OnInitializedAsync()
    {
        await GetUserId();
        user = await UserService.GetUserByUserId(userId);
    }

    private async Task ShowUpdate(User user)
    {
        var parameter = new DialogParameters { ["User"] = user };
        var dialog = await DialogService.ShowAsync<AccountUpdatePopUp>("Chỉnh sửa thông tin tài khoản", parameter);
        var result = await dialog.Result;
        await InvokeAsync(OnInitializedAsync);
    }

    private async Task GetUserId()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userId = authState.User.Claims
        .Where(c => c.Type.Equals(ClaimTypes.NameIdentifier))
        .SingleOrDefault().Value;
    }
}