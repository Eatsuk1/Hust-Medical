@page "/account"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject IAccountService AccountService
@layout MainLayout

<MudPaper Style="overflow:hidden; position:relative; margin-top:60px">
    <MudTextField Label="Name" @bind-Value="userResponse.Name" ReadOnly="true"></MudTextField>
    <MudTextField Label="Email" @bind-Value="userResponse.Email" ReadOnly="true"></MudTextField>
    <MudAvatar Size="Size.Medium" Rounded="true">
        <MudImage Src="@userResponse.Picture"/>
    </MudAvatar>
</MudPaper>

@code{
    private string userId;

    private UserResponse userResponse = new UserResponse();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetUserId();
            var access_token = await ProtectedLocalStorage.GetAsync<string>("access_token");
            userResponse = await AccountService.GetUserResponseById(userId, access_token.Value);
            StateHasChanged();
        }
    }

    private async Task GetUserId()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userClaim = authState.User.Claims;
        foreach (var item in userClaim)
        {
            if (item.Type == ClaimTypes.NameIdentifier)
            {
                userId = item.Value;
            }
        }
    }
}