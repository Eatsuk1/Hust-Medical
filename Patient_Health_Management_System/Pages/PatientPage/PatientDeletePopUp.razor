@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar
@inject IPatientService PatientService
@inject IPrescriptionService PrescriptionService
@inject IMedicalExaminationService MedicalExaminationService
@inject IBillingService BillingService

<MudDialog>
    <DialogContent>
        <MudText>Bạn có chắc muốn xoá bệnh nhân: @PatientName này không?</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Huỷ</MudButton>
        <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="Submit">Xoá</MudButton>
    </DialogActions>
</MudDialog>

@code{

    private Patient patient = new Patient();

    private List<Prescription> prescriptions = new List<Prescription>();

    private List<MedicalExamination> medicalExaminations = new List<MedicalExamination>();

    private List<Billing> billings = new List<Billing>();

    private string userId = string.Empty;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string PatientName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        prescriptions = await PrescriptionService.GetPrescriptionsByPatientId(Id);
        medicalExaminations = await MedicalExaminationService.GetMedicalExaminationsByPatientId(Id);
        billings = await BillingService.GetBillingsByPatientId(Id);
        await GetUserId();
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Submit()
    {
        if(prescriptions.Any())
        {
            await PrescriptionService.DeletePrescriptionById(prescriptions, userId);
        }
        if(medicalExaminations.Any())
        {
            await MedicalExaminationService.DeleteMedicalExaminationsById(medicalExaminations, userId);
        }
        if(billings.Any())
        {
            await BillingService.DeleteBillingsById(billings, userId);
        }
        await PatientService.DeletePatientById(Id, userId);
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
		Snackbar.Add("Xoá bệnh nhân thành công!", Severity.Success);
        MudDialog.Close(DialogResult.Ok(true));
    }

    private async Task GetUserId()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userClaim = authState.User.Claims;
        foreach (var item in userClaim)
        {
            if (item.Type == ClaimTypes.NameIdentifier)
            {
                userId = item.Value;
            }
        }
    }
}