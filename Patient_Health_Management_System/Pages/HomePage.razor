@page "/home"
@attribute [Authorize(Roles = "Doctor, Admin")]
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IAccountService AccountService
@inject IPatientService PatientService
@inject IMedicalExaminationService MedicalExaminationService
@inject IUserService UserService
@layout MainLayout

<PageTitle>Trang chủ</PageTitle>

<AuthorizeView Context="contextAuthorize">
    <NotAuthorized>
        <MudText>Not Authorized</MudText>
    </NotAuthorized>
    <Authorized>
        <div style="display:flex; flex-direction:row; width:100vh; justify-content:space-between; margin-top:140px">
            <div style="display:flex; align-items:center; width:40%; justify-content:space-evenly">
                <MudImage style="margin-bottom:18px" Src="./assets/imgs/clinic.png" Height="100" Width="100" />
                <MudText Typo="Typo.h3">HustMec</MudText>
            </div>
            <div style="display:flex; flex-direction:column">
                <MudGrid Style="margin-bottom:10px" Spacing="2" Justify="Justify.Center">
                    <MudItem>
                        <MudPaper Height="140px" Width="140px" Style="display:flex; flex-direction:column; cursor:pointer; align-items:center; justify-content:center; background-image: linear-gradient(to top, #e5e2e2, #ffffff);" @onclick="NavigateToPatientPage">
                            <div style="display:flex; flex-direction:column; align-items:center">
                                <MudImage Style="height:36px; width:36px; margin-bottom:10px" Src="./assets/imgs/patient.png"></MudImage>
						        <MudText Typo="Typo.subtitle1" Style="font-weight:bold">Bệnh nhân</MudText>
					        </div>
                        </MudPaper>
                    </MudItem>
                    <MudItem>
                        <MudPaper Height="140px" Width="140px" Style="display:flex; flex-direction:column; cursor:pointer; align-items:center; justify-content:center; background-image: linear-gradient(to top, #e5e2e2, #ffffff);" @onclick="NavigateToMedicalExPage">
                            <div style="display:flex; flex-direction:column; align-items:center">
                                <MudImage Style="height:36px; width:36px; margin-bottom:10px" Src="./assets/imgs/medicalEx.png"></MudImage>
                                <MudText Typo="Typo.subtitle1" Style="font-weight:bold">Đơn khám</MudText>
                            </div>
                        </MudPaper>
                    </MudItem>
                    <MudItem>
                        <MudPaper Height="140px" Width="140px" Style="display:flex; flex-direction:column; cursor:pointer; align-items:center; justify-content:center; background-image: linear-gradient(to top, #e5e2e2, #ffffff);" @onclick="NavigateToPrescriptionPage">
                            <div style="display:flex; flex-direction:column; align-items:center">
                                <MudImage Style="height:36px; width:36px; margin-bottom:10px" Src="./assets/imgs/prescription.png"></MudImage>
                                <MudText Typo="Typo.subtitle1" Style="font-weight:bold">Đơn thuốc</MudText>
                            </div>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
                <AuthorizeView Roles="Admin">
                    <MudGrid Style="margin-bottom:10px" Spacing="2" Justify="Justify.Center">
                        <MudItem>
                            <MudPaper Height="140px" Width="140px" Style="display:flex; flex-direction:column; cursor:pointer; align-items:center; justify-content:center; background-image: linear-gradient(to top, #e5e2e2, #ffffff);" @onclick="NavigateToBillingPage">
                                <div style="display:flex; flex-direction:column; align-items:center">
                                    <MudImage Style="height:36px; width:36px; margin-bottom:10px" Src="./assets/imgs/bill.png"></MudImage>
                                    <MudText Typo="Typo.subtitle1" Style="font-weight:bold">Hóa đơn</MudText>
                                </div>
                            </MudPaper>
                        </MudItem>
                        <MudItem>
                            <MudPaper Height="140px" Width="140px" Style="display:flex; flex-direction:column; cursor:pointer; align-items:center; justify-content:center; background-image: linear-gradient(to top, #e5e2e2, #ffffff);" @onclick="NavigateToMedicinePage">
                                <div style="display:flex; flex-direction:column; align-items:center">
                                    <MudImage Style="height:36px; width:36px; margin-bottom:10px" Src="./assets/imgs/medicine.png"></MudImage>
                                    <MudText Typo="Typo.subtitle1" Style="font-weight:bold">Thuốc</MudText>
                                </div>
                            </MudPaper>
                        </MudItem>
                        <MudItem>
                            <MudPaper Height="140px" Width="140px" Style="display:flex; flex-direction:column; cursor:pointer; align-items:center; justify-content:center; background-image: linear-gradient(to top, #e5e2e2, #ffffff);" @onclick="NavigateToStatisticPage">
                                <div style="display:flex; flex-direction:column; align-items:center">
                                    <MudImage Style="height:36px; width:36px; margin-bottom:10px" Src="./assets/imgs/analytics.png"></MudImage>
                                    <MudText Typo="Typo.subtitle1" Style="font-weight:bold">Thống kê</MudText>
                                </div>
                            </MudPaper>
                        </MudItem>
                    </MudGrid>
                    <MudGrid Spacing="2" Justify="Justify.Center">
                        <MudItem>
                            <MudPaper Height="140px" Width="140px" Style="display:flex; flex-direction:column; cursor:pointer; align-items:center; justify-content:center; background-image: linear-gradient(to top, #e5e2e2, #ffffff);" @onclick="NavigateToUserMngPage">
                                <div style="display:flex; flex-direction:column; align-items:center">
                                    <MudImage Style="height:36px; width:36px; margin-bottom:10px" Src="./assets/imgs/userMng.png"></MudImage>
                                    <MudText Typo="Typo.subtitle1" Style="font-weight:bold">Người dùng</MudText>
                                </div>
                            </MudPaper>
                        </MudItem>
                        </MudGrid>
                </AuthorizeView>
            </div>
		</div>
    </Authorized>
</AuthorizeView>

@code{
    private string dayTime = string.Empty;

    private string userName = string.Empty;

    private string userRole = string.Empty;

    private MudTabs mudTabs;

    private long numberOfPatients = 0;
    private long numberOfUsers = 0;
    private long numberOfMedicalExaminations = 0;

    protected override async Task OnInitializedAsync()
    {
        await GetUser();
        //SetDayTime();
        //if (userRole.Equals("Admin"))
        //{
        //    var autoRefreshUI = new Timer( _ =>
        //    {
        //        InvokeAsync(async () =>
        //        {
        //            numberOfPatients = await PatientService.GetNumberPatients();
        //            numberOfUsers = await UserService.GetNumberUsers();
        //            numberOfMedicalExaminations = await MedicalExaminationService.GetNumberMedicalExaminations();
        //            StateHasChanged();
        //        }
        //        );
        //    }, null, 0, 1000);
        //}
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var access_token = await ProtectedLocalStorage.GetAsync<string>("access_token");
            if (String.IsNullOrEmpty(access_token.Value) || AccountService.IsExpired(access_token.Value))
            {
                var auth0Token = await AccountService.TokenGenerator();
                await ProtectedLocalStorage.SetAsync("access_token", auth0Token.access_token);
            }
        }
    }

    private void SetDayTime()
    {
        if(DateTime.Now.Hour >= 0 && DateTime.Now.Hour < 12)
        {
            dayTime = "Chào buổi sáng";
        }
        else if (DateTime.Now.Hour >= 12 && DateTime.Now.Hour < 18)
        {
            dayTime = "Chào buổi chiều";
        }
        else
        {
            dayTime = "Chào buổi tối";
        }
    }

    private async Task GetUser()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity.IsAuthenticated)
        {
            var userId = authState.User.Claims.Where(c => c.Type.Equals(ClaimTypes.NameIdentifier)).SingleOrDefault().Value;
            userRole = authState.User.Claims.Where(c => c.Type.Equals(ClaimTypes.Role)).SingleOrDefault().Value;
            userName = await UserService.GetUserNameByUserId(userId);

        }
        else NavigationManager.NavigateTo("/auth/login"); 
    }

    //private string GenerateRandomColor()
    //{
    //return String.Format("#{0:X6}", DefaultVariable.random.Next(0x1000000));
    //}

    //example Chart
    //public static double[] data1 = { 20.0, 80.0 };
    //public string[] labels1 = { $"Đang điều trị ({data1[0]}%)", $"Đã khỏi bệnh ({data1[1]}%)" };

    //public static double[] data = { 60.0, 40.0 };
    //public string[] labels = { $"Nam ({data[0]}%)", $"Nữ ({data[1]}%)" };

    private void NavigateToPatientPage()
    {
        NavigationManager.NavigateTo("/patient");
	}

    private void NavigateToMedicalExPage()
    {
        NavigationManager.NavigateTo("/medical_examination");
    }

    private void NavigateToPrescriptionPage()
    {
        NavigationManager.NavigateTo("/prescription");
	}

    private void NavigateToBillingPage()
    {
        NavigationManager.NavigateTo("/billing");
	}

    private void NavigateToStatisticPage()
    {
        NavigationManager.NavigateTo("/statistic");
	}

    private void NavigateToMedicinePage()
    {
        NavigationManager.NavigateTo("/medicine");
	}

    private void NavigateToUserMngPage()
    {
        NavigationManager.NavigateTo("/user_management");
	}
}
