@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ISnackbar Snackbar
@inject IMedicalExaminationService medicalExamService
@inject IPrescriptionService prescriptionService
@inject IBillingService billingService

<MudDialog>
    <DialogContent>
        <MudText>Bạn có chắc muốn xoá đơn khám này không?</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Huỷ</MudButton>
        <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="Submit">Xoá</MudButton>
    </DialogActions>
</MudDialog>

@code{

    private MedicalExamination medicalExamination= new MedicalExamination();

    private Prescription prescription = new Prescription();

    private Billing billing = new Billing();

    private string userId = string.Empty;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        prescription = await prescriptionService.GetPrescriptionByMedicalExaminationId(Id);
        if (Task.FromResult<Prescription>(prescription).IsCompletedSuccessfully)
        {
            billing = await billingService.GetBillingByPrescriptionId(prescription.Id);
        }
        await GetUserId();
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Submit()
    {
        if(prescription is not null) await prescriptionService.DeletePrescriptionById(prescription.Id, userId);
        if(billing is not null) await billingService.DeleteBillingById(billing.Id, userId);
        await medicalExamService.DeleteMedicalExaminationById(Id, userId);
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
		Snackbar.Add("Xoá đơn khám thành công!", Severity.Success);
        MudDialog.Close(DialogResult.Ok(true));
    }

    private async Task GetUserId()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userId = authState.User.Claims
        .Where(c => c.Type.Equals(ClaimTypes.NameIdentifier))
        .SingleOrDefault().Value;
    }
} 